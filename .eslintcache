[{"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/reportWebVitals.js":"1","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/App.tsx":"2","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/store/rootStore/cookingStore/cookingStore.ts":"3","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/api/api.ts":"4","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/components/Cooker.tsx":"5","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/components/Dish.tsx":"6","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/store/rootStore/rootStore.ts":"7"},{"size":362,"mtime":1608461095419,"results":"8","hashOfConfig":"9"},{"size":3329,"mtime":1610290904099,"results":"10","hashOfConfig":"9"},{"size":4216,"mtime":1610289867096,"results":"11","hashOfConfig":"9"},{"size":468,"mtime":1610286630402,"results":"12","hashOfConfig":"9"},{"size":1834,"mtime":1610287409383,"results":"13","hashOfConfig":"9"},{"size":1220,"mtime":1608472554395,"results":"14","hashOfConfig":"9"},{"size":154,"mtime":1608464415981,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o8eqnx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/reportWebVitals.js",[],"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/App.tsx",["31","32"],"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/store/rootStore/cookingStore/cookingStore.ts",["33","34"],"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/api/api.ts",[],"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/components/Cooker.tsx",["35"],"import styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport React, { useEffect } from 'react';\nimport { RootStore } from '../store/rootStore/rootStore';\nimport { cookersInterface } from '../api/api';\nimport Dish from './Dish';\n\nexport const AppContainer = styled.div`\n      \n      width: 100%;\n      height: 100%;\n      background-color: white;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n`;\n\nexport interface CookerProps {\n    rootStore?: RootStore,\n    cooker: cookersInterface,\n\n}\n\nexport const CookerContainer = styled.div`\n\nmargin: 10px;\nwidth: 400px;\ndisplay: flex;\nflex-direction: column;\nheight: auto;\nbackground-color: green;\njustify-content: center;\nalign-items: center;\nborder-radius: 10px;\nmin-width: 320px;\nmin-height:490px;\n\n`;\n\n\nconst Cooker: React.FC<CookerProps> = inject('rootStore')( observer(({ rootStore, cooker }) => {\n\n  const { onDishNameChange, addNewDish } = rootStore?.cookingStore!;\n \n\n  return (  <CookerContainer>\n          <p>\n           id: { cooker.id }</p>\n          <p>\n        название повара  { cooker.name}\n          </p>\n         <p>Блюда:  \n            </p>\n            <div>  \n            {  cooker.cookItems.map(el => {\n              return <Dish parentId = {cooker.id}  dish = {el} />\n            }) } \n            <div>\n            <p>новое блюдо</p>\n\n            <input type = 'text'  value = {cooker.newDishName}  onChange = {(event: React.ChangeEvent<HTMLInputElement>) => { \n                   onDishNameChange(cooker.id , event);\n             }} />\n             <button  onClick = {() => {\n                 addNewDish(cooker.id);\n             } } > Добавить </button> \n            </div>\n      \n\n             </div>\n      </ CookerContainer>)\n\n\n\n}));\n\nexport default Cooker; \n","/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/components/Dish.tsx",["36","37"],"/Users/kyraz4mail.ru/Desktop/kristina-test/my-app/src/store/rootStore/rootStore.ts",[],{"ruleId":"38","severity":1,"message":"39","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":26},{"ruleId":"42","severity":1,"message":"43","line":77,"column":6,"nodeType":"44","endLine":77,"endColumn":8,"suggestions":"45"},{"ruleId":"38","severity":1,"message":"46","line":2,"column":50,"nodeType":"40","messageId":"41","endLine":2,"endColumn":64},{"ruleId":"38","severity":1,"message":"47","line":146,"column":15,"nodeType":"40","messageId":"41","endLine":146,"endColumn":22},{"ruleId":"38","severity":1,"message":"48","line":3,"column":17,"nodeType":"40","messageId":"41","endLine":3,"endColumn":26},{"ruleId":"38","severity":1,"message":"48","line":3,"column":17,"nodeType":"40","messageId":"41","endLine":3,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":26},"@typescript-eslint/no-unused-vars","'cookersInterface' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllCookers'. Either include it or remove the dependency array.","ArrayExpression",["49"],"'makeObservable' is defined but never used.","'newJson' is assigned a value but never used.","'useEffect' is defined but never used.",{"desc":"50","fix":"51"},"Update the dependencies array to be: [getAllCookers]",{"range":"52","text":"53"},[1436,1438],"[getAllCookers]"]